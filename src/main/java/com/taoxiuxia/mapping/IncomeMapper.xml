<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.taoxiuxia.dao.IncomeMapper" >
  <resultMap id="BaseResultMap" type="com.taoxiuxia.model.Income" >
    <id column="income_id" property="incomeId" jdbcType="INTEGER" />
    <result column="income_user_id" property="incomeUserId" jdbcType="INTEGER" />
    <result column="income_item_id" property="incomeItemId" jdbcType="INTEGER" />
    <result column="income_money" property="incomeMoney" jdbcType="REAL" />
    <result column="income_date" property="incomeDate" jdbcType="TIMESTAMP" />
    <result column="income_remark" property="incomeRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    income_id, income_user_id, income_item_id, income_money, income_date, income_remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.taoxiuxia.model.IncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select 
    *
    from income
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from income
    where income_id = #{incomeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from income
    where income_id = #{incomeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taoxiuxia.model.IncomeExample" >
    delete from income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taoxiuxia.model.Income" >
    insert into income (income_id, income_user_id, income_item_id, 
      income_money, income_date, income_remark
      )
    values (#{incomeId,jdbcType=INTEGER}, #{incomeUserId,jdbcType=INTEGER}, #{incomeItemId,jdbcType=INTEGER}, 
      #{incomeMoney,jdbcType=REAL}, #{incomeDate,jdbcType=TIMESTAMP}, #{incomeRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taoxiuxia.model.Income" >
    insert into income
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="incomeId != null" >
        income_id,
      </if>
      <if test="incomeUserId != null" >
        income_user_id,
      </if>
      <if test="incomeItemId != null" >
        income_item_id,
      </if>
      <if test="incomeMoney != null" >
        income_money,
      </if>
      <if test="incomeDate != null" >
        income_date,
      </if>
      <if test="incomeRemark != null" >
        income_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="incomeId != null" >
        #{incomeId,jdbcType=INTEGER},
      </if>
      <if test="incomeUserId != null" >
        #{incomeUserId,jdbcType=INTEGER},
      </if>
      <if test="incomeItemId != null" >
        #{incomeItemId,jdbcType=INTEGER},
      </if>
      <if test="incomeMoney != null" >
        #{incomeMoney,jdbcType=REAL},
      </if>
      <if test="incomeDate != null" >
        #{incomeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="incomeRemark != null" >
        #{incomeRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taoxiuxia.model.IncomeExample" resultType="java.lang.Integer" >
    select count(*) from income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update income
    <set >
      <if test="record.incomeId != null" >
        income_id = #{record.incomeId,jdbcType=INTEGER},
      </if>
      <if test="record.incomeUserId != null" >
        income_user_id = #{record.incomeUserId,jdbcType=INTEGER},
      </if>
      <if test="record.incomeItemId != null" >
        income_item_id = #{record.incomeItemId,jdbcType=INTEGER},
      </if>
      <if test="record.incomeMoney != null" >
        income_money = #{record.incomeMoney,jdbcType=REAL},
      </if>
      <if test="record.incomeDate != null" >
        income_date = #{record.incomeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.incomeRemark != null" >
        income_remark = #{record.incomeRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update income
    set income_id = #{record.incomeId,jdbcType=INTEGER},
      income_user_id = #{record.incomeUserId,jdbcType=INTEGER},
      income_item_id = #{record.incomeItemId,jdbcType=INTEGER},
      income_money = #{record.incomeMoney,jdbcType=REAL},
      income_date = #{record.incomeDate,jdbcType=TIMESTAMP},
      income_remark = #{record.incomeRemark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taoxiuxia.model.Income" >
    update income
    <set >
      <if test="incomeUserId != null" >
        income_user_id = #{incomeUserId,jdbcType=INTEGER},
      </if>
      <if test="incomeItemId != null" >
        income_item_id = #{incomeItemId,jdbcType=INTEGER},
      </if>
      <if test="incomeMoney != null" >
        income_money = #{incomeMoney,jdbcType=REAL},
      </if>
      <if test="incomeDate != null" >
        income_date = #{incomeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="incomeRemark != null" >
        income_remark = #{incomeRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where income_id = #{incomeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taoxiuxia.model.Income" >
    update income
    set income_user_id = #{incomeUserId,jdbcType=INTEGER},
      income_item_id = #{incomeItemId,jdbcType=INTEGER},
      income_money = #{incomeMoney,jdbcType=REAL},
      income_date = #{incomeDate,jdbcType=TIMESTAMP},
      income_remark = #{incomeRemark,jdbcType=VARCHAR}
    where income_id = #{incomeId,jdbcType=INTEGER}
  </update>
</mapper>